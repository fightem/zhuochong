# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'password_find.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import pymysql
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QWidget, QLabel, QLineEdit, QPushButton, QVBoxLayout, QHBoxLayout, QSizePolicy, QFrame


from PyQt5 import QtCore, QtGui, QtWidgets
# import pymysql
import re
from PyQt5.QtWidgets import QWidget, QMessageBox
from PyQt5.QtCore import QTimer
import yagmail
import random
mail_num = 0
# 发送验证码代码



def change_sql(username, password, mail):
    print('运行了这个代码')
    # 1.链接数据库
    conn = pymysql.connect(host="127.0.0.1", port=3306, user='root', password='520520hxa', charset='utf8',
                           db='zhuochong2333')
    cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)

    # 2.发送指令
    sql = "update login set username=%s,password=%s,mail=%s  where username=%s"
    cursor.execute(sql, [username, password, mail, username])
    conn.commit()

    # 3.关闭链接
    cursor.close()
    conn.close()


def send_verification_email(receiver_email):
    sender_email = '307691946@qq.com'  # 发送者邮箱
    sender_password = 'qxmcrrxdpbrvbgge'  # 发送者邮箱密码或授权码
    # 连接邮箱服务器
    yag = yagmail.SMTP(user=sender_email, password=sender_password, host='smtp.qq.com', encoding='GBK')

    # 生成6位随机数验证码
    verification_code = ''.join(random.choices('0123456789', k=6))

    # 邮件主题和正文
    subject = '验证码'
    body = f'您的验证码是：{verification_code}，请在页面中输入以完成验证。'

    # 发送邮件
    yag.send([receiver_email], subject, body)

    # 关闭连接
    yag.close()

    return verification_code


def checkmessage(username, mail, password1, password2):
    if not username:
        return "用户名不能为空"
    elif not mail:
        return "邮箱不能为空"
    elif not password1:
        return "密码不能为空"
    elif not password2:
        return "确认密码不能为空"


    if password1 != password2:
        return '前后密码不一致，请重新输入'

    pattern = r'^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    if not re.match(pattern, mail):
        return '邮箱格式不正确，请重新输入'


    # 1.链接数据库
    conn = pymysql.connect(host="127.0.0.1", port=3306, user='root', password='520520hxa', charset='utf8',
                           db='zhuochong2333')
    cursor = conn.cursor(cursor=pymysql.cursors.DictCursor)

    # 2.发送指令

    sql = "select * from login"
    cursor.execute(sql)
    list1 = cursor.fetchall()
    if list1:
        num = 0
        for item in list1:
            if username == item["username"] and mail == item["mail"]:
                return 'ok'
            if username == item['username']:
                num = 1

        if num == 0:
            return '此账号不存在,请重新输入'
    # 3.关闭链接
    cursor.close()
    conn.close()
    return '账号和邮箱不匹配'





class Ui_Form(object):
    def __init__(self):
        self.timer = QTimer()

    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(802, 437)
        Form.setStyleSheet("background-color: #ffffff")
        self.label_3 = QtWidgets.QLabel(Form)
        self.label_3.setGeometry(QtCore.QRect(10, 20, 211, 71))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(31)
        self.label_3.setFont(font)
        self.label_3.setStyleSheet("color :#f56692")
        self.label_3.setAlignment(QtCore.Qt.AlignCenter)
        self.label_3.setObjectName("label_3")
        self.label_4 = QtWidgets.QLabel(Form)
        self.label_4.setGeometry(QtCore.QRect(30, 90, 311, 41))
        font = QtGui.QFont()
        font.setFamily("黑体")
        font.setPointSize(14)
        self.label_4.setFont(font)
        self.label_4.setStyleSheet("color: #7e8490")
        self.label_4.setObjectName("label_4")
        self.lineEdit = QtWidgets.QLineEdit(Form)
        self.lineEdit.setGeometry(QtCore.QRect(30, 140, 211, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(13)
        self.lineEdit.setFont(font)
        self.lineEdit.setStyleSheet("border-radius:3px;\n"
"color:#7e8490;\n"
"border: 1px solid #7e8490;")
        self.lineEdit.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit.setDragEnabled(False)
        self.lineEdit.setObjectName("lineEdit")
        self.lineEdit_5 = QtWidgets.QLineEdit(Form)
        self.lineEdit_5.setGeometry(QtCore.QRect(30, 260, 211, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(13)
        self.lineEdit_5.setFont(font)
        self.lineEdit_5.setStyleSheet("border-radius:3px;\n"
"color:#7e8490;\n"
"border: 1px solid #7e8490;")
        self.lineEdit_5.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_5.setDragEnabled(False)
        self.lineEdit_5.setObjectName("lineEdit_5")
        self.lineEdit_3 = QtWidgets.QLineEdit(Form)
        self.lineEdit_3.setGeometry(QtCore.QRect(280, 140, 211, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(13)
        self.lineEdit_3.setFont(font)
        self.lineEdit_3.setStyleSheet("border-radius:3px;\n"
"color:#7e8490;\n"
"border: 1px solid #7e8490;")
        self.lineEdit_3.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_3.setDragEnabled(False)
        self.lineEdit_3.setObjectName("lineEdit_3")
        self.lineEdit_4 = QtWidgets.QLineEdit(Form)
        self.lineEdit_4.setGeometry(QtCore.QRect(30, 200, 211, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(13)
        self.lineEdit_4.setFont(font)
        self.lineEdit_4.setStyleSheet("border-radius:3px;\n"
"color:#7e8490;\n"
"border: 1px solid #7e8490;")
        self.lineEdit_4.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_4.setDragEnabled(False)
        self.lineEdit_4.setObjectName("lineEdit_4")
        self.label = QtWidgets.QLabel(Form)
        self.label.setGeometry(QtCore.QRect(420, 10, 431, 291))
        self.label.setStyleSheet("border-image: url(:/图片/password.png);")
        self.label.setText("")
        self.label.setObjectName("label")
        self.lineEdit_6 = QtWidgets.QLineEdit(Form)
        self.lineEdit_6.setGeometry(QtCore.QRect(30, 320, 211, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(13)
        self.lineEdit_6.setFont(font)
        self.lineEdit_6.setStyleSheet("border-radius:3px;\n"
"color:#7e8490;\n"
"border: 1px solid #7e8490;")
        self.lineEdit_6.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.lineEdit_6.setDragEnabled(False)
        self.lineEdit_6.setObjectName("lineEdit_6")
        self.pushButton = QtWidgets.QPushButton(Form)
        self.pushButton.setGeometry(QtCore.QRect(280, 260, 211, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(15)
        self.pushButton.setFont(font)
        self.pushButton.setStyleSheet("color: #ffffff;\n"
"background-color: #f6769d;\n"
"border: none;\n"
"border-radius: 2px ")

        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.pushbutton1_clicked)


        self.pushButton_2 = QtWidgets.QPushButton(Form)
        self.pushButton_2.setGeometry(QtCore.QRect(120, 380, 331, 41))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(15)
        self.pushButton_2.setFont(font)
        self.pushButton_2.setStyleSheet("color: #ffffff;\n"
"background-color: #f6769d;\n"
"border: none;\n"
"border-radius: 2px ")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.pushbutton2_clicked)

        self.label.raise_()
        self.label_3.raise_()
        self.label_4.raise_()
        self.lineEdit.raise_()
        self.lineEdit_5.raise_()
        self.lineEdit_3.raise_()
        self.lineEdit_4.raise_()
        self.lineEdit_6.raise_()
        self.pushButton.raise_()
        self.pushButton_2.raise_()

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

        self.timer.timeout.connect(self.update_countdown)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label_3.setText(_translate("Form", "找回密码"))
        self.label_4.setText(_translate("Form", "忘记了密码？点击找回吧"))
        self.lineEdit.setPlaceholderText(_translate("Form", "  用户名"))
        self.lineEdit_5.setPlaceholderText(_translate("Form", "  请输入账号对应邮箱"))
        self.lineEdit_3.setPlaceholderText(_translate("Form", " 请输入修改后密码"))
        self.lineEdit_4.setPlaceholderText(_translate("Form", " 再次输入密码"))
        self.lineEdit_6.setPlaceholderText(_translate("Form", "  邮箱验证码"))
        self.pushButton.setText(_translate("Form", "获取验证码"))
        self.pushButton_2.setText(_translate("Form", "点击登录"))

    def start_countdown(self):
        self.remaining_time = 60
        self.pushButton.setText(f"{self.remaining_time}秒")
        self.pushButton.setDisabled(True)
        self.timer.start(1000)

    def update_countdown(self):
        self.remaining_time -= 1
        self.pushButton.setText(f"{self.remaining_time}秒")
        if self.remaining_time <= 0:
            self.timer.stop()
            self.pushButton.setText("获取验证码")
            self.pushButton.setEnabled(True)

    def alert(self,msg):
        self.error_box = QMessageBox()
        self.error_box.setIcon(QMessageBox.Warning)
        self.error_box.setWindowTitle("错误提示")
        self.error_box.setText(msg)
        self.error_box.exec_()

    def pushbutton1_clicked(self):
        username = self.lineEdit.text()
        password1 = self.lineEdit_3.text()
        password2 = self.lineEdit_4.text()
        mail = self.lineEdit_5.text()

        msg = checkmessage(username, mail, password1, password2)
        print(msg)
        if msg != 'ok':
            self.alert(msg)
        else:
            global mail_num
            mail_num = send_verification_email(mail)
            self.start_countdown()


    def pushbutton2_clicked(self):
        mail_code = self.lineEdit_6.text()
        if mail_code != mail_num:
            self.alert('验证码输入错误')

        else:
            print('一切都很正确************')
            username = self.lineEdit.text()
            password1 = self.lineEdit_3.text()
            mail = self.lineEdit_5.text()

            print(username, password1, mail)
            change_sql(username, password1, mail)

            msg = '密码修改成功'
            error_box = QMessageBox()
            error_box.setIcon(QMessageBox.Warning)
            error_box.setWindowTitle("密码修改")
            error_box.setText(msg)
            error_box.exec_()
            self.close()




class PasswordWindow(QWidget, Ui_Form):
    def __init__(self):
        super().__init__()
        self.setWindowTitle('密码找回')
        self.setupUi(self)




if __name__ == "__main__":
    import sys
    app = QApplication([])
    main_window = PasswordWindow()
    main_window.show()
    app.exec_()
    # app = QtWidgets.QApplication(sys.argv)
    # Form = QtWidgets.QWidget()
    # ui = Ui_Form()
    # ui.setupUi(Form)
    # Form.show()
    # sys.exit(app.exec_())
